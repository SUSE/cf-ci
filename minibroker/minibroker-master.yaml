---
shared:
  helm-charts-s3-configs: &helm-charts-s3-configs
    access_key_id: ((s3-access-key))
    bucket: ((s3-bucket))
    disable_ssl: ((s3-disable-ssl))
    endpoint: ((s3-endpoint))
    private: false
    secret_access_key: ((s3-secret-key))
  helm-charts-src-configs: &helm-charts-src-configs
    branch: ((helm-charts-src-branch))
    private_key: ((github-private-key))
    uri: ((helm-charts-src-repo-ref))
  s3-configs: &s3-configs
    access_key_id: ((s3-access-key))
    bucket: ((s3-bucket))
    disable_ssl: ((s3-disable-ssl))
    endpoint: ((s3-endpoint))
    private: false
    secret_access_key: ((s3-secret-key))
  src-ci-configs: &src-ci-configs
    uri: ((ci-repo))
    branch: ((ci-branch))
    private_key: ((github-private-key))


resources:
- name: src
  type: git
  source:
    branch: ((src-branch))
    private_key: ((github-private-key))
    uri: ((src-repo-ref))

- name: src-redis
  type: git
  source:
    <<: *helm-charts-src-configs
    paths:
    - stable/redis

- name: src-postgres
  type: git
  source:
    <<: *helm-charts-src-configs
    paths:
    - stable/postgresql

- name: src-mariadb
  type: git
  source:
    <<: *helm-charts-src-configs
    paths:
    - stable/mariadb

- name: src-mongodb
  type: git
  source:
    <<: *helm-charts-src-configs
    paths:
    - stable/mongodb

- name: src-ci
  type: git
  source:
    <<: *src-ci-configs
    paths:
    - minibroker

- name: src-ci-docker
  type: git
  source:
    <<: *src-ci-configs
    paths:
    - minibroker/Dockerfile

- name: docker.minibroker
  type: docker-image
  source:
    repository: ((docker-org))/minibroker
    username: ((docker-username))
    password: ((docker-password))


- name: docker.helm-client
  type: docker-image
  source:
    repository: ((docker-org))/helm-client
    username: ((docker-username))
    password: ((docker-password))

- name: s3.repo-index
  type: s3
  source:
    <<: *s3-configs
    versioned_file: ((s3-prefix))/index.yaml

- name: s3.minibroker-chart
  type: s3
  source:
    <<: *s3-configs
    regexp: ((s3-prefix))/minibroker-(.*).tgz

- name: s3.helm-charts-repo-index
  type: s3
  source:
    <<: *helm-charts-s3-configs
    versioned_file: ((helm-charts-s3-prefix))/index.yaml

- name: s3.redis-chart
  type: s3
  source:
    <<: *helm-charts-s3-configs
    regexp: ((helm-charts-s3-prefix))/redis-(.*).tgz

- name: s3.postgresql-chart
  type: s3
  source:
    <<: *helm-charts-s3-configs
    regexp: ((helm-charts-s3-prefix))/postgresql-(.*).tgz

- name: s3.mariadb-chart
  type: s3
  source:
    <<: *helm-charts-s3-configs
    regexp: ((helm-charts-s3-prefix))/mariadb-(.*).tgz

- name: s3.mongodb-chart
  type: s3
  source:
    <<: *helm-charts-s3-configs
    regexp: ((helm-charts-s3-prefix))/mongodb-(.*).tgz

groups:
- name: minibroker
  jobs:
  - build-minibroker-image
  - generate-minibroker-chart
  - generate-minibroker-repo
- name: charts
  jobs:
  - generate-mariadb
  - generate-mongodb
  - generate-postgres
  - generate-redis
  - generate-repo
- name: docker
  jobs:
  - build-docker-image

jobs:
- name: build-minibroker-image
  serial: true
  plan:
  - aggregate:
    - get: src
      trigger: true
    - get: src-ci
  - task: build-minibroker
    file: src-ci/minibroker/tasks/build-minibroker.yaml
  - put: docker.minibroker
    params:
      build: minibroker/src/image

- name: generate-minibroker-chart
  plan:
  - aggregate:
    - get: src-ci
    - get: src
    - get: docker.minibroker
      trigger: true
      passed:
      - build-minibroker-image
  - task: generate-chart
    file: src-ci/minibroker/tasks/generate-minibroker-chart.yaml
  - put: s3.minibroker-chart
    params:
      file: 'chart/minibroker-*.tgz'
      acl: public-read
- name: generate-minibroker-repo
  plan:
  - aggregate:
    - get: src-ci
    - get: s3.minibroker-chart
      trigger: true
      passed:
      - generate-minibroker-chart
  - task: generate-repo
    file: src-ci/minibroker/tasks/generate-minibroker-repo.yaml
    params:
      MINIBROKER_BUCKET: ((s3-bucket))
      CHARTS_DIR: ((s3-prefix))
  - put: s3.repo-index
    params:
      file: 'repo/index.yaml'
      acl: public-read
- name: build-docker-image
  serial: true
  plan:
  - get: src-ci-docker
    trigger: true
  - put: docker.helm-client
    params:
      build: src-ci-docker/minibroker
      build_args:
        HELM_VERSION: ((helm-version))
- name: generate-mariadb
  plan:
  - aggregate:
    - get: src-ci
      trigger: true
    - get: src
      resource: src-mariadb
      trigger: true
  - task: generate-chart
    file: src-ci/minibroker/tasks/generate-chart.yaml
    params:
      CHART_NAME: mariadb
  - put: s3.mariadb-chart
    params:
      file: 'chart/mariadb-*.tgz'
      acl: public-read
- name: generate-mongodb
  plan:
  - aggregate:
    - get: src-ci
      trigger: true
    - get: src
      resource: src-mongodb
      trigger: true
  - task: generate-chart
    file: src-ci/minibroker/tasks/generate-chart.yaml
    params:
      CHART_NAME: mongodb
  - put: s3.mongodb-chart
    params:
      file: 'chart/mongodb-*.tgz'
      acl: public-read
- name: generate-postgres
  plan:
  - aggregate:
    - get: src-ci
      trigger: true
    - get: src
      resource: src-postgres
      trigger: true
  - task: generate-chart
    file: src-ci/minibroker/tasks/generate-chart.yaml
    params:
      CHART_NAME: postgresql
  - put: s3.postgresql-chart
    params:
      file: 'chart/postgresql-*.tgz'
      acl: public-read
- name: generate-redis
  plan:
  - aggregate:
    - get: src-ci
      trigger: true
    - get: src
      resource: src-redis
      trigger: true
  - task: generate-chart
    file: src-ci/minibroker/tasks/generate-chart.yaml
    params:
      CHART_NAME: redis
  - put: s3.redis-chart
    params:
      file: 'chart/redis-*.tgz'
      acl: public-read
- name: generate-repo
  plan:
  - aggregate:
    - get: src-ci
    - get: s3.mariadb-chart
      trigger: true
      passed:
      - generate-mariadb
    - get: s3.mongodb-chart
      trigger: true
      passed:
      - generate-mongodb
    - get: s3.redis-chart
      trigger: true
      passed:
      - generate-redis
    - get: s3.postgresql-chart
      trigger: true
      passed:
      - generate-postgres
  - task: generate-repo
    file: src-ci/minibroker/tasks/generate-repo.yaml
    params:
      MINIBROKER_BUCKET: ((s3-bucket))
      CHARTS_DIR: ((helm-charts-s3-prefix))
  - put: s3.helm-charts-repo-index
    params:
      file: 'repo/index.yaml'
      acl: public-read

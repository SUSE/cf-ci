#!/usr/bin/env bash

set -o errexit -o nounset

usage() {
    cat <<EOF

${0} [options] <config variant>

The pipeline configuration file "cap-qa-upgrades.yml" must exist.
The configuration file "config-<config variant>.yml" must exist.

Available options:
    -h, --help          Print this help and exit
    -p, --prefix=       Set additional pipeline prefix
    -t, --target=       Set fly target concourse

EOF
}

OPTS=$(getopt -o hp:t: --long help,prefix:,target: -- "$@")
eval set -- "${OPTS}"

prefix=""
target=""
secrets_file=""
while true ; do
    case "$1" in
        -h|--help)   usage ; exit 0 ;;
        -p|--prefix) prefix="${2%-}-" ; shift 2 ;;
        -t|--target) target="${2}" ; shift 2 ;;
        --)          shift ; break ;;
        *)           printf "Internal error: unexpected arguments %s\n" "$*" >&2 ; exit 1 ;;
    esac
done

if test -z "${1:-}" ; then
    usage
    exit 1
fi
pipeline_name="${prefix}cap-qa-upgrades"
pipeline_file="cap-qa-upgrades.yml"
vars_file="config-${1}.yml"

if ! test -r "${pipeline_file}" ; then
    usage >&2
    printf "Failed to read pipeline configuration %s\n" "${pipeline_file}" >&2
    exit 1
fi

if ! test -r "${vars_file}" ; then
    usage >&2
    if test -n "${1:-}" ; then
        printf "Variables file %s is not readable\n" "${vars_file}" >&2
    fi
    exit 1
fi

if test -n "${CONCOURSE_SECRETS_FILE:-}"; then
    if test -r "${CONCOURSE_SECRETS_FILE:-}" ; then
        secrets_file="${CONCOURSE_SECRETS_FILE}"
    else
        printf "ERROR: Secrets file %s is not readable\n" "${CONCOURSE_SECRETS_FILE}" >&2
        exit 2
    fi
fi

fly \
    ${target:+"--target=${target}"} \
    set-pipeline \
    --pipeline="${pipeline_name}" \
    --config="${pipeline_file}" \
    --load-vars-from=<(
        # We concatenate the two vars files together so that the config vars can
        # refer to secret vars correctly
        ${secrets_file:+gpg --decrypt --batch ${secrets_file}} # Import secrets
        sed '/^---$/d' < "${vars_file}"                        # Config vars
    )
fly \
    ${target:+"--target=$target"} \
    expose-pipeline \
    --pipeline="${pipeline_name}"
fly \
    ${target:+"--target=$target"} \
    unpause-pipeline \
    --pipeline="${pipeline_name}"

<%
# Convert a multiline string into a string with literal '\n's for YAML to parse as multiline string
class ::String
  def yamlify()
      self.sub("\n", '\n')
  end
end
%>

resources:
- name: ci
  type: git
  source:
    uri: <%= src_ci_repo %>
    branch: ((src-ci-branch))
    paths:
    - qa-pipelines/*
    - sample-apps/*

- name: s3.scf-config-sles
  type: s3
  source:
    endpoint: <%= s3_config_endpoint %>
    access_key_id: <%= s3_config_access_key %>
    secret_access_key: <%= s3_config_secret_key %>
    bucket: <%= s3_config_bucket_sles %>
    regexp: ((s3-config-prefix-sles))scf-sle-(.*)\.zip$

- name: pool.kube-hosts
  type: pool
  source:
    uri: <%= kube_pool_repo %>
    private_key: "<%= kube_pool_key.yamlify %>"
    branch: <%= kube_pool_branch %>
    pool: <%= kube_pool_pool %>
jobs:
<% 18.times do |num| %>
<% test_name = sprintf('%03i', num + 1) %>
- name: ((pipeline-name))-<%= test_name %>
  plan:
  - do:
    - aggregate:
      - get: ci
      - get: s3.scf-config-sles
        trigger: true
      - put: pool.kube-hosts
        params: {acquire: true}
        timeout: 2m
    on_failure:
      put: pool.kube-hosts
      params: {release: pool.kube-hosts}
  - do:
    - task: acceptance-tests-brain
      file: ci/qa-pipelines/tasks/run-test.yml
      params:
        TEST_NAME: acceptance-tests-brain
        INCLUDE_BRAINS_REGEX: "<%= test_name %>"

        # AWS/EKS configuration
        AZ_SP_APPID: <%= az_sp_app_id %>
        AZ_SP_PASSWORD: <%= az_sp_password %>
        AZ_SP_TENANT: <%= az_sp_tenant %>
        AWS_ACCESS_KEY_ID: <%= aws_jenkins_access_key %>
        AWS_SECRET_ACCESS_KEY: <%= aws_jenkins_secret_key %>

        # GCP/GKE configuration
        GKE_PRIVATE_KEY_BASE64: "<%= gke_private_key_base64.yamlify %>"
      input_mapping:
        s3.scf-config: s3.scf-config-sles
    - put: pool.kube-hosts
      params: {release: pool.kube-hosts}
<% end %>
